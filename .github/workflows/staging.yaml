name: Staging

on: 
  workflow_dispatch:
    inputs: 
      distinct_id:
        description: 'Input id from triggering workflow'
        required: false
        default: ''
        type: string

permissions:
  id-token: write
  contents: read

concurrency: staging

env: 
  ENV: staging

jobs:
    build-frontend:
        name: 'Build Frontend'
        runs-on: ubuntu-latest
        env:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
            ACR_LOGIN: ${{ github.event.client_payload.acr-login }}
            ACR_TAG: ${{ github.event.client_payload.acr-login }}/taro:frontend

        steps:
            - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
              run: echo ${{ github.event.inputs.distinct_id }}
            - name: Login to Azure with service principal
              uses: azure/login@v1.4.3
              with:
                creds: ${{ secrets.AZURE_SP_CREDENTIALS }}
            - name: 'Loggin to Azure Container Registry'
              run: az acr login --name tarostagingregistry.azurecr.io
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
            - name: Build and push
              uses: docker/build-push-action@v2
              with:
                file: ./testing.Dockerfile
                push: true
                tags: 'tarostagingregistry.azurecr.io/taro:frontend'

  
    deploy-frontend:
        name: 'Deploy Frontend'
        runs-on: ubuntu-latest
        needs: [build-frontend]
        environment: testing
        env:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
            ACR_TAG: ${{ github.event.client_payload.acr-login }}/taro:frontend

        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: 'Terraform Setup'
              uses: hashicorp/setup-terraform@v1
              with:
                terraform_wrapper: false
            - name: 'Initialize Terraform'
              working-directory: ./terraform/deploy
              run: terraform init
            - name: 'Make plan'
              working-directory: ./terraform/deploy
              run: terraform plan -var "instance_name=staging-frontend" -var "environment=stagging" -var "resource_group_name=taro-staging" -var "acr_name=tarostagingregistry" -var "image_registry_credential_user=$ARM_CLIENT_ID" -var "image_registry_credential_password=$ARM_CLIENT_SECRET" -out 'test-deploy.tfplan'
            - name: 'Apply plan'
              working-directory: ./terraform/deploy
              run: terraform apply test-deploy.tfplan
